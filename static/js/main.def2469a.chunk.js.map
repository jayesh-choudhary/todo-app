{"version":3,"sources":["components/Todo.js","components/AddTodo.js","components/Header.js","components/DeleteAllTodos.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","index","completeTodo","removeTodo","editTodo","useState","editing","setEditing","text","setText","className","style","textDecoration","isCompleted","type","onChange","checked","onClick","value","e","target","AddTodo","addTodo","setValue","onSubmit","preventDefault","placeholder","Header","DeleteAllTodos","deleteAllTodos","App","todos","setTodos","newTodos","splice","newText","map","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.def2469a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst Todo = ({ todo, index, completeTodo, removeTodo, editTodo }) => {\n  // state for editing todo\n  const [editing, setEditing] = useState(false);\n  const [text, setText] = useState(\"\");\n\n  // handler to toggle editing\n  const handleEdit = () => {\n    if (editing === false) {\n      setEditing(true);\n      setText(todo.text);\n    } else {\n      setEditing(false);\n      editTodo(index, text);\n    }\n  };\n\n  // handle Input Change\n  const handleInputChange = (e) => {\n    setText(e.target.value);\n  };\n\n  return (\n    <div\n      className=\"todo\"\n      style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}\n    >\n      <input\n        className=\"add-input\"\n        type=\"checkbox\"\n        onChange={() => completeTodo(index)}\n        checked={todo.isCompleted}\n      />\n      <p>{todo.text}</p>\n      <div className=\"btns\">\n        <button className=\"remove-btn\" onClick={() => removeTodo(index)}>\n          Delete\n        </button>\n        <button className=\"edit-btn\" onClick={handleEdit}>\n          Edit\n        </button>\n      </div>\n      {editing ? (\n        <div className=\"edit-input\">\n          <input type=\"text\" value={text} onChange={handleInputChange} />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Todo;\n","import React, { useState } from \"react\";\n\nconst AddTodo = ({ addTodo }) => {\n  const [value, setValue] = useState(\"\");\n\n  // handler onSubmit will call addTodo\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        placeholder=\"Add Todo...\"\n      />\n      <button className=\"todo-btn\" type=\"submit\">\n        Add\n      </button>\n    </form>\n  );\n};\n\nexport default AddTodo;\n","import React from \"react\";\n\nconst Header = () => {\n  return <h1>Todo App</h1>;\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst DeleteAllTodos = ({ deleteAllTodos }) => {\n  return (\n    <div>\n      <button onClick={deleteAllTodos} className=\"delete-all-btn\">\n        Delete All\n      </button>\n    </div>\n  );\n};\n\nexport default DeleteAllTodos;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Todo from \"./components/Todo\";\nimport AddTodo from \"./components/AddTodo\";\nimport Header from \"./components/Header\";\nimport DeleteAllTodos from \"./components/DeleteAllTodos\";\n\nfunction App() {\n  // Todo State\n  const [todos, setTodos] = useState([\n    {\n      text: \"Make Todo React app\",\n      isCompleted: false,\n    },\n    {\n      text: \"Buy Groceries\",\n      isCompleted: false,\n    },\n    {\n      text: \"Meet friends in evening\",\n      isCompleted: false,\n    },\n    {\n      text: \"Do a hair Cut\",\n      isCompleted: false,\n    },\n    {\n      text: \"Light Bill Pay\",\n      isCompleted: false,\n    },\n  ]);\n\n  // handler for adding new Todo\n  const addTodo = (text) => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  // handler to toggle todo.isComplete\n  const completeTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = !newTodos[index].isCompleted;\n    setTodos(newTodos);\n  };\n\n  // handler to remove todo\n  const removeTodo = (index) => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  // handler to delete All the selected todos\n  const deleteAllTodos = () => {\n    const newTodos = todos.filter((todo) => {\n      return todo.isCompleted === false;\n    });\n    setTodos(newTodos);\n  };\n\n  // handler to edit todo\n  const editTodo = (index, newText) => {\n    const newTodos = [...todos];\n    newTodos[index].text = newText;\n    setTodos(newTodos);\n  };\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <div className=\"todo-list\">\n        <AddTodo addTodo={addTodo} />\n        {todos.map((todo, index) => (\n          <Todo\n            key={index}\n            index={index}\n            todo={todo}\n            completeTodo={completeTodo}\n            removeTodo={removeTodo}\n            editTodo={editTodo}\n          />\n        ))}\n        <DeleteAllTodos deleteAllTodos={deleteAllTodos} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}