{"version":3,"sources":["components/Todo.js","components/AddTodo.js","components/Header.js","components/DeleteAllTodos.js","components/CompleteAllTodos.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","i","completeTodo","removeTodo","editTodo","checkTodo","useState","editing","setEditing","text","setText","handleEdit","e","handleEnterInput","keyCode","handleInputChange","target","value","draggableId","toString","index","provided","className","isCompleted","ref","innerRef","draggableProps","dragHandleProps","type","onChange","checked","isChecked","onKeyDown","onClick","AddTodo","addTodo","setValue","onSubmit","preventDefault","placeholder","Header","DeleteAllTodos","deleteAllTodos","CompleteAllTodos","completeAllTodos","App","todos","setTodos","newTodos","splice","newText","onDragEnd","result","items","Array","from","source","reorderedItem","destination","droppableId","droppableProps","map","filter","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46fcc2d7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst Todo = ({ todo, i, completeTodo, removeTodo, editTodo, checkTodo }) => {\n  // state for editing todo\n  const [editing, setEditing] = useState(false);\n  const [text, setText] = useState(\"\");\n\n  // handler to toggle editing\n  const handleEdit = (e) => {\n    if (editing === false) {\n      setEditing(true);\n      setText(todo.text);\n    } else {\n      setEditing(false);\n      editTodo(i, text);\n    }\n  };\n\n  // handle if the user press enter after edit\n  const handleEnterInput = (e) => {\n    if (e.keyCode === 13) {\n      setEditing(false);\n      editTodo(i, text);\n    }\n  };\n\n  // handle Input Change\n  const handleInputChange = (e) => {\n    setText(e.target.value);\n  };\n\n  return (\n    <Draggable key={i} draggableId={i.toString()} index={i}>\n      {(provided) => (\n        <div\n          className={todo.isCompleted ? \"completed todo\" : \"todo\"}\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        >\n          <input\n            className=\"add-input\"\n            type=\"checkbox\"\n            onChange={() => checkTodo(i)}\n            checked={todo.isChecked}\n          />\n          {editing ? (\n            <div className=\"edit-input\">\n              <input\n                type=\"text\"\n                value={text}\n                onChange={handleInputChange}\n                onKeyDown={handleEnterInput}\n              />\n            </div>\n          ) : (\n            <p>{todo.text}</p>\n          )}\n          <div className=\"btns\">\n            <button className=\"complete-btn\" onClick={() => completeTodo(i)}>\n              <i className=\"fa fa-check\"></i>\n            </button>\n            <button className=\"remove-btn\" onClick={() => removeTodo(i)}>\n              <i className=\"fa fa-trash\"></i>\n            </button>\n            <button className=\"edit-btn\" onClick={handleEdit}>\n              <i className=\"fa fa-edit\"></i>\n            </button>\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Todo;\n","import React, { useState } from \"react\";\n\nconst AddTodo = ({ addTodo }) => {\n  const [value, setValue] = useState(\"\");\n\n  // handler onSubmit will call addTodo\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        placeholder=\"Add Todo...\"\n      />\n      <button className=\"todo-btn\" type=\"submit\">\n        Add\n      </button>\n    </form>\n  );\n};\n\nexport default AddTodo;\n","import React from \"react\";\n\nconst Header = () => {\n  return <h1>Todo App</h1>;\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst DeleteAllTodos = ({ deleteAllTodos }) => {\n  return (\n    <div>\n      <button onClick={deleteAllTodos} className=\"delete-all-btn\">\n        Delete All\n      </button>\n    </div>\n  );\n};\n\nexport default DeleteAllTodos;\n","import React from \"react\";\n\nconst CompleteAllTodos = ({ completeAllTodos }) => {\n  return (\n    <div>\n      <button onClick={completeAllTodos} className=\"complete-all-btn\">\n        Complete All\n      </button>\n    </div>\n  );\n};\n\nexport default CompleteAllTodos;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Todo from \"./components/Todo\";\nimport AddTodo from \"./components/AddTodo\";\nimport Header from \"./components/Header\";\nimport DeleteAllTodos from \"./components/DeleteAllTodos\";\nimport CompleteAllTodos from \"./components/CompleteAllTodos\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nfunction App() {\n  // Todo State\n  const [todos, setTodos] = useState([\n    {\n      text: \"Make Todo React app\",\n      isCompleted: false,\n      isChecked: false,\n    },\n    {\n      text: \"Buy Groceries\",\n      isCompleted: false,\n      isChecked: false,\n    },\n    {\n      text: \"Meet friends in evening\",\n      isCompleted: false,\n      isChecked: false,\n    },\n    {\n      text: \"Do a hair Cut\",\n      isCompleted: false,\n      isChecked: false,\n    },\n    {\n      text: \"Light Bill Pay\",\n      isCompleted: false,\n      isChecked: false,\n    },\n  ]);\n\n  // handler for adding new Todo\n  const addTodo = (text) => {\n    const newTodos = [...todos, { text, isCompleted: false, isChecked: false }];\n    setTodos(newTodos);\n  };\n\n  // handler to toggle todo.isComplete\n  const completeTodo = (i) => {\n    const newTodos = [...todos];\n    newTodos[i].isCompleted = !newTodos[i].isCompleted;\n    setTodos(newTodos);\n  };\n\n  // handler to remove todo\n  const removeTodo = (i) => {\n    const newTodos = [...todos];\n    newTodos.splice(i, 1);\n    setTodos(newTodos);\n  };\n\n  // handler to delete All the selected todos\n  const deleteAllTodos = () => {\n    const newTodos = todos.filter((todo) => {\n      return todo.isChecked === false;\n    });\n    setTodos(newTodos);\n  };\n\n  // handler to edit todo\n  const editTodo = (i, newText) => {\n    const newTodos = [...todos];\n    newTodos[i].text = newText;\n    setTodos(newTodos);\n  };\n\n  // handler to check todo\n  const checkTodo = (i) => {\n    const newTodos = [...todos];\n    newTodos[i].isChecked = !newTodos[i].isChecked;\n    setTodos(newTodos);\n  };\n\n  // handler to completeAll todo\n  const completeAllTodos = () => {\n    todos.map((todo, i) => {\n      return todo.isChecked ? (completeTodo(i), checkTodo(i)) : null;\n    });\n  };\n\n  // const onDragEnd = (result) => {\n  //   const { destination, source, draggableId } = result;\n  //   if (!destination) {\n  //     return;\n  //   }\n  //   if (\n  //     destination.droppableId === source.droppableId &&\n  //     destination.index === source.index\n  //   ) {\n  //     return;\n  //   }\n  // };\n\n  const onDragEnd = (result) => {\n    const items = Array.from(todos);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    setTodos(items);\n    // console.log(result);\n  };\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <div className=\"todo-list\">\n        <AddTodo addTodo={addTodo} />\n        <DragDropContext onDragEnd={onDragEnd}>\n          <Droppable droppableId=\"todoapp\">\n            {(provided) => (\n              <div\n                className=\"todoapp\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {todos.map((todo, i) => {\n                  return (\n                    <Todo\n                      key={i}\n                      i={i}\n                      todo={todo}\n                      completeTodo={completeTodo}\n                      removeTodo={removeTodo}\n                      editTodo={editTodo}\n                      checkTodo={checkTodo}\n                    />\n                  );\n                })}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n        {todos.filter((todos) => todos.isChecked === true).length > 1 ? (\n          <DeleteAllTodos deleteAllTodos={deleteAllTodos} />\n        ) : null}\n        {todos.filter((todos) => todos.isChecked === true).length > 1 ? (\n          <CompleteAllTodos completeAllTodos={completeAllTodos} />\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}